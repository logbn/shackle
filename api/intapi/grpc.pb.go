// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/intapi/grpc.proto

package intapi

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Node update request
type NodeUpdateRequest struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AddrIntApi           string            `protobuf:"bytes,2,opt,name=addrIntApi,proto3" json:"addrIntApi,omitempty"`
	Meta                 map[string]string `protobuf:"bytes,3,rep,name=meta,proto3" json:"meta,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	VNodeCount           uint32            `protobuf:"varint,4,opt,name=vNodeCount,proto3" json:"vNodeCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *NodeUpdateRequest) Reset()         { *m = NodeUpdateRequest{} }
func (m *NodeUpdateRequest) String() string { return proto.CompactTextString(m) }
func (*NodeUpdateRequest) ProtoMessage()    {}
func (*NodeUpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33a5c5ebe6742920, []int{0}
}

func (m *NodeUpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeUpdateRequest.Unmarshal(m, b)
}
func (m *NodeUpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeUpdateRequest.Marshal(b, m, deterministic)
}
func (m *NodeUpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeUpdateRequest.Merge(m, src)
}
func (m *NodeUpdateRequest) XXX_Size() int {
	return xxx_messageInfo_NodeUpdateRequest.Size(m)
}
func (m *NodeUpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeUpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NodeUpdateRequest proto.InternalMessageInfo

func (m *NodeUpdateRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *NodeUpdateRequest) GetAddrIntApi() string {
	if m != nil {
		return m.AddrIntApi
	}
	return ""
}

func (m *NodeUpdateRequest) GetMeta() map[string]string {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *NodeUpdateRequest) GetVNodeCount() uint32 {
	if m != nil {
		return m.VNodeCount
	}
	return 0
}

type NodeUpdateReply struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeUpdateReply) Reset()         { *m = NodeUpdateReply{} }
func (m *NodeUpdateReply) String() string { return proto.CompactTextString(m) }
func (*NodeUpdateReply) ProtoMessage()    {}
func (*NodeUpdateReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33a5c5ebe6742920, []int{1}
}

func (m *NodeUpdateReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeUpdateReply.Unmarshal(m, b)
}
func (m *NodeUpdateReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeUpdateReply.Marshal(b, m, deterministic)
}
func (m *NodeUpdateReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeUpdateReply.Merge(m, src)
}
func (m *NodeUpdateReply) XXX_Size() int {
	return xxx_messageInfo_NodeUpdateReply.Size(m)
}
func (m *NodeUpdateReply) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeUpdateReply.DiscardUnknown(m)
}

var xxx_messageInfo_NodeUpdateReply proto.InternalMessageInfo

func (m *NodeUpdateReply) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*NodeUpdateRequest)(nil), "intapi.NodeUpdateRequest")
	proto.RegisterMapType((map[string]string)(nil), "intapi.NodeUpdateRequest.MetaEntry")
	proto.RegisterType((*NodeUpdateReply)(nil), "intapi.NodeUpdateReply")
}

func init() {
	proto.RegisterFile("api/intapi/grpc.proto", fileDescriptor_33a5c5ebe6742920)
}

var fileDescriptor_33a5c5ebe6742920 = []byte{
	// 283 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0xcf, 0x4b, 0xc3, 0x30,
	0x14, 0xc7, 0x6d, 0x3b, 0xa7, 0x7b, 0xfe, 0x0e, 0x8a, 0x75, 0x07, 0x29, 0xf5, 0x52, 0x10, 0x5a,
	0x98, 0x87, 0x89, 0x37, 0x37, 0x3c, 0x78, 0xd0, 0x43, 0xc0, 0x8b, 0xb7, 0xd8, 0x3c, 0xd6, 0xb0,
	0x2e, 0x89, 0x6d, 0x52, 0xe8, 0x1f, 0xea, 0xff, 0x23, 0x6d, 0xa7, 0x2b, 0xe8, 0x4e, 0xc9, 0xfb,
	0x24, 0xdf, 0x4f, 0x5e, 0x78, 0x70, 0xc1, 0xb4, 0x48, 0x84, 0x34, 0xcd, 0xb2, 0x28, 0x74, 0x1a,
	0xeb, 0x42, 0x19, 0x45, 0x86, 0x1d, 0x0a, 0xbf, 0x1c, 0x38, 0x7b, 0x55, 0x1c, 0xdf, 0x34, 0x67,
	0x06, 0x29, 0x7e, 0x5a, 0x2c, 0x0d, 0x39, 0x06, 0x57, 0x70, 0xdf, 0x09, 0x9c, 0x68, 0x44, 0x5d,
	0xc1, 0xc9, 0x35, 0x00, 0xe3, 0xbc, 0x78, 0x96, 0xe6, 0x51, 0x0b, 0xdf, 0x6d, 0x79, 0x8f, 0x90,
	0x29, 0x0c, 0x56, 0x68, 0x98, 0xef, 0x05, 0x5e, 0x74, 0x30, 0xb9, 0x89, 0x3b, 0x79, 0xfc, 0x47,
	0x1c, 0xbf, 0xa0, 0x61, 0x4f, 0xd2, 0x14, 0x35, 0x6d, 0x03, 0x8d, 0xb8, 0x6a, 0x6e, 0xcd, 0x95,
	0x95, 0xc6, 0x1f, 0x04, 0x4e, 0x74, 0x44, 0x7b, 0x64, 0x3c, 0x85, 0xd1, 0x6f, 0x84, 0x9c, 0x82,
	0xb7, 0xc4, 0x7a, 0xdd, 0x56, 0xb3, 0x25, 0xe7, 0xb0, 0x5b, 0xb1, 0xdc, 0xe2, 0xba, 0xa5, 0xae,
	0x78, 0x70, 0xef, 0x9d, 0xf0, 0x16, 0x4e, 0xfa, 0xaf, 0xeb, 0xbc, 0x26, 0x3e, 0xec, 0x95, 0x36,
	0x4d, 0xb1, 0x2c, 0x5b, 0xc5, 0x3e, 0xfd, 0x29, 0x27, 0x14, 0x0e, 0xe7, 0x4a, 0x15, 0x5c, 0x48,
	0x66, 0x84, 0x92, 0x64, 0x06, 0xb0, 0x09, 0x93, 0xab, 0xad, 0xdf, 0x19, 0x5f, 0xfe, 0x77, 0xa4,
	0xf3, 0x3a, 0xdc, 0x99, 0x85, 0xef, 0x41, 0x26, 0x16, 0x59, 0xa5, 0x72, 0xbb, 0xc2, 0x58, 0xa8,
	0xa4, 0xcc, 0x58, 0xba, 0xcc, 0x31, 0xd9, 0xcc, 0xe3, 0x63, 0xd8, 0xce, 0xe2, 0xee, 0x3b, 0x00,
	0x00, 0xff, 0xff, 0xea, 0x9f, 0x51, 0xb0, 0xa4, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CoordinationClient is the client API for Coordination service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CoordinationClient interface {
	// NodeUpdate is used during cluster initialization to ensure leader has correct follower grpc address
	NodeUpdate(ctx context.Context, in *NodeUpdateRequest, opts ...grpc.CallOption) (*NodeUpdateReply, error)
}

type coordinationClient struct {
	cc grpc.ClientConnInterface
}

func NewCoordinationClient(cc grpc.ClientConnInterface) CoordinationClient {
	return &coordinationClient{cc}
}

func (c *coordinationClient) NodeUpdate(ctx context.Context, in *NodeUpdateRequest, opts ...grpc.CallOption) (*NodeUpdateReply, error) {
	out := new(NodeUpdateReply)
	err := c.cc.Invoke(ctx, "/intapi.Coordination/NodeUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CoordinationServer is the server API for Coordination service.
type CoordinationServer interface {
	// NodeUpdate is used during cluster initialization to ensure leader has correct follower grpc address
	NodeUpdate(context.Context, *NodeUpdateRequest) (*NodeUpdateReply, error)
}

// UnimplementedCoordinationServer can be embedded to have forward compatible implementations.
type UnimplementedCoordinationServer struct {
}

func (*UnimplementedCoordinationServer) NodeUpdate(ctx context.Context, req *NodeUpdateRequest) (*NodeUpdateReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NodeUpdate not implemented")
}

func RegisterCoordinationServer(s *grpc.Server, srv CoordinationServer) {
	s.RegisterService(&_Coordination_serviceDesc, srv)
}

func _Coordination_NodeUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodeUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoordinationServer).NodeUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intapi.Coordination/NodeUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoordinationServer).NodeUpdate(ctx, req.(*NodeUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Coordination_serviceDesc = grpc.ServiceDesc{
	ServiceName: "intapi.Coordination",
	HandlerType: (*CoordinationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NodeUpdate",
			Handler:    _Coordination_NodeUpdate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/intapi/grpc.proto",
}
